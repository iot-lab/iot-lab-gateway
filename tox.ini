[tox]
envlist = copying, test, code_check, control_node_serial

# infos:
#   can't hide return value before tox 1.9
#   and can't do bash stuff directly, so call bash

[testenv]
passenv = IOTLAB_GATEWAY_CFG_DIR


[testenv:test]
whitelist_externals = /bin/bash
deps = -rtests_utils/test-requirements.txt
commands =
    pytest {posargs}
    # Get rid of pytest ImportMismatchError for future runs (either locally
    # or via docker)
    bash -c "find . -name '*.py[odc]' -type f -delete"
    bash -c "find . -name '__pycache__' -type d -delete"
    bash -c "rm -rf *.egg-info .cache .eggs build dist"


[testenv:upload_coverage]
deps = -rtests_utils/test-requirements.txt
passenv = CI TRAVIS TRAVIS_*
commands = codecov


[testenv:copying]
whitelist_externals = /bin/bash
commands=
    bash tests_utils/check_license.sh


[testenv:code_check]
whitelist_externals = /bin/bash
deps = -rtests_utils/test-requirements.txt
commands =
    bash -c "set -o pipefail;python setup.py lint | tee pylint.out"
    bash -c "set -o pipefail;flake8 | tee flake8.out"


[testenv:integration]
whitelist_externals =
    /bin/bash
    /bin/hostname
# Use only sitepackages on gateways, no 'deps'
# Only install 'webtest' as I'm lazy to package it for the moment
deps = WebTest
# Requires tox >= 1.8
sitepackages = True
commands =
    # Tests should be run as user 'www-data'
    bash -c "test {env:USER} == www-data"
    bash -c "pytest -x \
             --cov-report xml:$(hostname)_coverage.xml {posargs}"


[testenv:local]
deps = -rtests_utils/test-requirements.txt
whitelist_externals =
    /bin/bash
commands =
    bash -c "if [ -z '$IOTLAB_GATEWAY_CFG_DIR' ]; then \
             export IOTLAB_GATEWAY_CFG_DIR={posargs:tests_utils/cfg_dir/}; \
             fi; \
             export IOTLAB_USERS=/tmp/users;\
             pytest -x"


[testenv:control_node_serial]
skip_install = True
sitepackages = True
deps = gcovr
whitelist_externals =
    /usr/bin/make
    /bin/bash
commands =
    make -C control_node_serial realclean coverage


[testenv:doc]
whitelist_externals =
    make
deps =
    sphinx
commands =
    make -C doc clean html
