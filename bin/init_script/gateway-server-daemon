#!/bin/bash

# This file is a part of IoT-LAB gateway_code
# Copyright (C) 2015 INRIA (Contact: admin@iot-lab.info)
# Contributor(s) : see AUTHORS file
#
# This software is governed by the CeCILL license under French law
# and abiding by the rules of distribution of free software.  You can  use,
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# http://www.cecill.info.
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability.
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.



# Init script for Gateway Server using bottle
# http://bottlepy.org

# add path for finding openocd and gateway-rest-server
export PATH=$PATH:/usr/local/bin

: ${CONFDIR:="/var/local/config"}
NAME=gateway-server
DAEMON=gateway-rest-server
DAEMONUSER=www-data

daemon_control() {
  local command=$1
  local bind_ip=$2

  local desc="Gateway Server"
  local piddir=/var/run/${NAME}
  local logdir=/var/log/${NAME}
  local confdir=${CONFDIR}

  if [ -n $3 ]
  then
    local on=$3
    desc+=" (${on})"
    piddir+="/${on}"
    logdir+="/${on}"
    confdir+="/${on}"
  fi

  local pidfile=${piddir}/${NAME}.pid
  local logfile=${logdir}/bottle.log
  local daemon_opts="${bind_ip} 8080 --log-folder=${logdir}"

  case "${command}" in
    start)
      echo "Starting ${desc} ... "
      if [ ! -d ${piddir} ]; then
           mkdir -p ${piddir}
           chown ${DAEMONUSER}:${DAEMONUSER} ${piddir}
      fi
      if [ ! -d ${logdir} ]; then
           mkdir -p ${logdir}
           chown ${DAEMONUSER}:${DAEMONUSER} ${logdir}
      fi
      IOTLAB_GATEWAY_CFG_DIR=${confdir} start-stop-daemon --start -m --pidfile ${pidfile} -b --chuid ${DAEMONUSER}:${DAEMONUSER} --exec /bin/bash -- -c "exec ${DAEMON} ${daemon_opts} >> ${logfile} 2>&1"
      ;;
    stop)
      echo "Stopping ${desc} ... "
      /sbin/start-stop-daemon --stop --pidfile ${pidfile}
      # Many daemons don't delete their pidfiles when they exit.
      rm -f ${pidfile}
      ;;
    restart)
      echo -n "Restarting ${desc} ... "
      $0 stop
      sleep 5
      $0 start
      ;;
    status)
      if [[ -f "${pidfile}" ]]; then
         echo "${desc} (pid $(cat ${pidfile})) is running."
      else
         echo "${desc} is stopped."
      fi
      ;;
    *)
      echo "Usage: /etc/init.d/bottle {start|stop|restart|status}"
      exit 1
      ;;
  esac
}

main() {
  if [ -f "${CONFDIR}/board_type" ]
  then
    daemon_control "$1" "0.0.0.0"
  else
    for on_conf_path in $(find ${CONFDIR} -mindepth 1 -type d | sort)
    do
      local ip_file="${on_conf_path}"/ip
      if [ -f "${ip_file}" ]
      then
        local bind_ip=$(cat "${ip_file}")
      else
        local bind_ip="0.0.0.0"
      fi
      daemon_control "$1" "${bind_ip}" "$(basename "${on_conf_path}")"
    done
  fi
}

COMMAND="$1"
shift # pop $1 from $@

main ${COMMAND}

exit 0

